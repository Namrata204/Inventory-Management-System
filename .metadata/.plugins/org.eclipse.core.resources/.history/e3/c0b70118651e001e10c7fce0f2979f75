package com.inventory.management.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

/**
 * Represents an order entity.
 */
@Entity
@Table(name = "orders")
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    private String customerName;
    private String shippingAddress;
    private double totalAmount;
    private String status;
    
    // Getters and Setters
    // These methods are used to retrieve and modify the values of the private fields.
    
    /**
     * Retrieves the ID of the order.
     *
     * @return The ID of the order.
     */
    public Long getId() {
        return id;
    }
    
    /**
     * Sets the ID of the order.
     *
     * @param id The ID to set.
     */
    public void setId(Long id) {
        this.id = id;
    }
    
    /**
     * Retrieves the customer name associated with the order.
     *
     * @return The customer name.
     */
    public String getCustomerName() {
        return customerName;
    }
    
    /**
     * Sets the customer name associated with the order.
     *
     * @param customerName The customer name to set.
     */
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }
    
    /**
     * Retrieves the shipping address of the order.
     *
     * @return The shipping address.
     */
    public String getShippingAddress() {
        return shippingAddress;
    }
    
    /**
     * Sets the shipping address of the order.
     *
     * @param shippingAddress The shipping address to set.
     */
    public void setShippingAddress(String shippingAddress) {
        this.shippingAddress = shippingAddress;
    }
    
    /**
     * Retrieves the total amount of the order.
     *
     * @return The total amount.
     */
    public double getTotalAmount() {
        return totalAmount;
    }
    
    /**
     * Sets the total amount of the order.
     *
     * @param totalAmount The total amount to set.
     */
    public void setTotalAmount(double totalAmount) {
        this.totalAmount = totalAmount;
    }
    
    /**
     * Retrieves the status of the order.
     *
     * @return The status of the order.
     */
    public String getStatus() {
        return status;
    }
    
    /**
     * Sets the status of the order.
     *
     * @param status The status to set.
     */
    public void setStatus(String status) {
        this.status = status;
    }
    
    // Parameterized Constructor
    // This constructor allows you to create a new instance of the Order class with specified values for all fields.
    
    /**
     * Constructs a new Order object with specified values for all fields.
     *
     * @param id              The ID of the order.
     * @param customerName    The customer name associated with the order.
     * @param shippingAddress The shipping address of the order.
     * @param totalAmount     The total amount of the order.
     * @param status          The status of the order.
     */
    public Order(Long id, String customerName, String shippingAddress, double totalAmount, String status) {
        super();
        this.id = id;
        this.customerName = customerName;
        this.shippingAddress = shippingAddress;
        this.totalAmount = totalAmount;
        this.status = status;
    }
    
    // Default Constructor
    // This constructor is used when you create a new instance of the Order class without providing any initial values.
    
    /**
     * Constructs a new empty Order object.
     */
    public Order() {
        super();
    }
}



